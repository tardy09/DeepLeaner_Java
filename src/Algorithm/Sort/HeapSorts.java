package Algorithm.Sort;

/**
 * Created by Administrator on 2017/2/27.
 */
public class HeapSorts {
    //步骤

    /**
     *  1. 建立初始堆
     *  2，调整堆
     *  3。重复  每次输出堆顶元素
     *  利用大顶堆(小顶堆)堆顶记录的是最大关键字(最小关键字)这一特性，使得每次从无序中选择最大记录(最小记录)变得简单。
                  其基本思想为(大顶堆)：
              1)将初始待排序关键字序列(R1,R2....Rn)构建成大顶堆，此堆为初始的无须区；
              2)将堆顶元素R[1]与最后一个元素R[n]交换，此时得到新的无序区(R1,R2,......Rn-1)和新的有序区(Rn),且满足R[1,2...n-1]<=R[n];
              3)由于交换后新的堆顶R[1]可能违反堆的性质，因此需要对当前无序区(R1,R2,......Rn-1)调整为新堆，然后再次将R[1]与无序区最后一个元素交换，
              得到新的无序区(R1,R2....Rn-2)和新的有序区(Rn-1,Rn)。不断重复此过程直到有序区的元素个数为n-1，则整个排序过程完成。

        操作过程
                1)初始化堆：将R[1..n]构造为堆；
                2)将当前无序区的堆顶元素R[1]同该区间的最后一个记录交换，然后将新的无序区调整为新的堆。
             因此对于堆排序，最重要的两个操作就是构造初始堆和调整堆，其实构造初始堆事实上也是调整堆的过程，
             只不过构造初始堆是对所有的非叶节点都进行调整。

     * @param arrray
     */
    public static  void HeapSort(Integer [] arrray){


    }

}
