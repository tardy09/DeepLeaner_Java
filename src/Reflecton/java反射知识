http://imtianx.cn/2016/11/26/java%20%E7%9F%A5%E8%AF%86%E4%B9%8B%20%E6%B3%A8%E8%A7%A3%E7%9A%84%E4%BD%BF%E7%94%A8%E5%92%8C%E8%A7%A3%E6%9E%90/

全面解析注解：java中的注解(Annotation) http://www.jianshu.com/p/ef2dca2b778d#
Class反射机制

指的是可以于运行时加载,探知和使用编译期间完全未知的类.
程序在运行状态中, 可以动态加载一个只有名称的类, 对于任意一个已经加载的类,
都能够知道这个类的所有属性和方法; 对于任意一个对象,都能调用他的任意一个方法和属性;
加载完类之后, 在堆内存中会产生一个Class类型的对象(一个类只有一个Class对象),
这个对象包含了完整的类的结构信息,而且这个Class对象就像一面镜子,透过这个镜子看到类的结构,
所以被称之为:反射
每个类被加载进入内存之后,系统就会为该类生成一个对应的java.lang.Class对象,
通过该Class对象就可以访问到JVM中的这个类.

Class对象的获取

对象的getClass()方法;
类的.class(最安全/性能最好)属性;
运用Class.forName(String className)动态加载类,className需要是类的全限定名(最常用)

通过反射来生成对象的方式有两种:

使用Class对象的newInstance()方法来创建该Class对象对应类的实例
(这种方式要求该Class对象的对应类有默认构造器).
先使用Class对象获取指定的Constructor对象,
再调用Constructor对象的newInstance()方法来创建该Class对象对应类的实例
(通过这种方式可以选择指定的构造器来创建实例).
