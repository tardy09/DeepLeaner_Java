1.单一职责原则：不如做项目里面遇到过的RBAC模型(Role-Based-Access-Control),基于角色的访问控制
，通过分配和取消角色来完成用户权限的授予和取消，使得动作主体（用户）和资源的行为（权限分离）

在面向对象的设计过程里面，继承是必不可少的，可以减少代码量，实现代码共享，每个子类都具有父类
的方法和属性
提高代码的可扩展性，实现父类的方法就可以为所欲为了，
不足：继承是侵入性的，只要继承，就会拥有父类的所有的属性和方法
    增强了耦合性，当父类的常量，变量和方法被修改的时候，需要考虑子类的修改


2.里氏代换原则
  只要父类可以出现的地方都可以出现子类，而且替换为子类也不会产生任何的错误或者异常。使用者可能根本不需要
  知道是父类还是子类。但是反过来就不一定可以，


